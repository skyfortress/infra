apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: skychat-ingress
  namespace: skychat
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-route53
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/log-format-upstream: '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time [$proxy_upstream_name] [$proxy_alternative_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $req_id $http_x_request_id $response_body'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      log_by_lua_block {
          ngx.var.response_body = string.sub(ngx.var.response_body or '', 1, 1000)
      }
spec:
  ingressClassName: nginx
  rules:
    - host: chat.skyfortress.dev
      http:
        paths:
          - path: /api/
            pathType: Prefix
            backend:
              service:
                name: skychat-api-server
                port:
                  number: 80
          - path: /graphql/
            pathType: Prefix
            backend:
              service:
                name: skychat-api-server
                port:
                  number: 80
          - path: /
            pathType: Prefix
            backend:
              service:
                name: skychat-widget-server
                port:
                  number: 80
    - host: chat-plugin.skyfortress.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: skychat-plugin-server
                port:
                  number: 80
  tls:
    - hosts:
        - chat.skyfortress.dev
        - chat-plugin.skyfortress.dev
      secretName: chat-letsencrypt-key
