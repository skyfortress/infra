apiVersion: v1
kind: Namespace
metadata:
  name: kitebot
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kitebot-pv
  namespace: kitebot
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/kitebot
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kitebot-pvc
  namespace: kitebot
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: kitebot
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      nodeSelector:
        homelab: "true"
      containers:
      - name: mongodb
        image: arm64v8/mongo:4.4.6
        ports:
        - containerPort: 27017
        resources:
          limits:
            memory: "512Mi"
            cpu: "0.5"
          requests:
            memory: "256Mi"
            cpu: "0.2"
        command:
        - "mongod"
        - "--bind_ip_all"
        - "--wiredTigerCacheSizeGB=0.1"
        - "--storageEngine=wiredTiger"
        - "--oplogSize=128"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kitebot-deployment
  namespace: kitebot
spec:
  replicas: 1
  strategy:
    type: Recreate  # Ensures the old pod is deleted before creating a new one
  selector:
    matchLabels:
      app: kitebot-server
  template:
    metadata:
      labels:
        app: kitebot-server
    spec:
      nodeSelector:
        homelab: "true"
      tolerations:
        - key: "app"
          operator: "Equal"
          value: "unreliable"
          effect: "NoSchedule"
      containers:
        - name: kitebot-server
          image: docker.io/skyfortress/kitebot:latest
          env:
            - name: MONGODB_DSN
              valueFrom:
                secretKeyRef:
                  name: kitebot-secrets
                  key: MONGODB_DSN
            - name: TELEGRAM_TOKEN
              valueFrom:
                secretKeyRef:
                  name: kitebot-secrets
                  key: TELEGRAM_TOKEN
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: kitebot-secrets
                  key: OPENAI_API_KEY
            - name: MEO_LOGIN
              valueFrom:
                secretKeyRef:
                  name: kitebot-secrets
                  key: MEO_LOGIN
            - name: MEO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kitebot-secrets
                  key: MEO_PASSWORD
            - name: TELEGRAM_BOT_NAME
              value: "@noob_kite_bot"
          volumeMounts:
            - mountPath: /images
              name: images-storage
      volumes:
        - name: images-storage
          persistentVolumeClaim:
            claimName: kitebot-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: kitebot
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None  # Headless service for StatefulSet
